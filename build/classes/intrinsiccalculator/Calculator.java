/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package intrinsiccalculator;

/**
 *
 * @author Ashen
 */
public class Calculator extends javax.swing.JFrame {

    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        years = new javax.swing.JTextField();
        lastYear = new javax.swing.JTextField();
        firstYear = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        GR_display = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        EFCFRate = new javax.swing.JTextField();
        discountRate = new javax.swing.JTextField();
        infiniteRate = new javax.swing.JTextField();
        HGR_calculate = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        IV_display = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        IV_calculate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Intrinsic Value Calculator");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 366, 30));

        jLabel2.setText("Number of Years   :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 26));

        jLabel3.setText("First Year CFPS     :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, 24));

        jLabel4.setText("Last Year CFPS     :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 24));

        years.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(years, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 120, 26));

        lastYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(lastYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 120, 26));

        firstYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        firstYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstYearActionPerformed(evt);
            }
        });
        getContentPane().add(firstYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 120, 26));

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 400, 90, 30));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 47, 386, 10));

        jLabel5.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Historic Growth Rate");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 123, 39));

        GR_display.setBackground(new java.awt.Color(204, 204, 204));
        GR_display.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        GR_display.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GR_display.setEnabled(false);
        GR_display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GR_displayActionPerformed(evt);
            }
        });
        getContentPane().add(GR_display, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 42, 39));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, -1, -1));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 262, 390, 10));

        jLabel6.setBackground(new java.awt.Color(102, 102, 102));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Historic Growth Calculator");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 366, 30));
        getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 302, 390, 0));
        getContentPane().add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 390, 10));

        jLabel7.setText("Estimated FCF Rate  :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 130, 26));

        jLabel8.setText("Infinite GR                  :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 130, 24));

        jLabel9.setText("Discount Rate            :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 130, 24));

        EFCFRate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(EFCFRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 80, 26));

        discountRate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(discountRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, 80, 26));

        infiniteRate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        infiniteRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infiniteRateActionPerformed(evt);
            }
        });
        getContentPane().add(infiniteRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, 80, 26));

        HGR_calculate.setText("Calculate");
        HGR_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HGR_calculateActionPerformed(evt);
            }
        });
        getContentPane().add(HGR_calculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 90, 90));

        jLabel10.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Intrinsic Value");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 460, 90, 39));

        IV_display.setBackground(new java.awt.Color(204, 204, 204));
        IV_display.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        IV_display.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IV_display.setEnabled(false);
        IV_display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IV_displayActionPerformed(evt);
            }
        });
        getContentPane().add(IV_display, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 90, 39));
        getContentPane().add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, 390, 20));
        getContentPane().add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 522, 390, 10));

        jLabel11.setBackground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("@AshenJ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 530, -1, -1));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("%");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, 30, 30));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("%");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 30, 30));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("%");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 30, 30));

        IV_calculate.setText("Calculate");
        IV_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IV_calculateActionPerformed(evt);
            }
        });
        getContentPane().add(IV_calculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, 90, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstYearActionPerformed

    private void GR_displayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GR_displayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GR_displayActionPerformed

    private void infiniteRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infiniteRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_infiniteRateActionPerformed

    private void IV_displayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IV_displayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IV_displayActionPerformed

    private void HGR_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HGR_calculateActionPerformed
       double lastCFPS,firstCFPS;
       int N_years;
       String result;
       
       //passing values
       lastCFPS=Double.parseDouble(lastYear.getText());
       firstCFPS=Double.parseDouble(firstYear.getText());
       N_years=Integer.parseInt(years.getText());
       
       //output
       result= calculateGrowthRate(firstCFPS,lastCFPS,N_years);
       GR_display.setText(result);
    }//GEN-LAST:event_HGR_calculateActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        clearAll();
        
    }//GEN-LAST:event_clearActionPerformed

    private void IV_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IV_calculateActionPerformed
        double LY,DR,EFCFR,IR;
        String result;
        
        //parsing values
        LY=Double.parseDouble(lastYear.getText());
        DR=Double.parseDouble(discountRate.getText());
        EFCFR=Double.parseDouble(EFCFRate.getText());
        IR=Double.parseDouble(infiniteRate.getText());
        
        //output
        result= calculateInsintricValue(LY,DR,EFCFR,IR);
        IV_display.setText(result);
    }//GEN-LAST:event_IV_calculateActionPerformed
    
    private void clearAll(){
    
      GR_display.setText("");
      IV_display.setText("");
      years.setText("");
      lastYear.setText("");
      firstYear.setText("");
      discountRate.setText("");
      infiniteRate.setText("");
      EFCFRate.setText("");
      
    }
    private static String calculateGrowthRate(double firstYear, double lastYear,int years){
      String growthRate;
      double growth,growthRounded,base,exponent,forecast;
      
      //simplyfying the formula Historic GR = [(lastyear CFPS/firstyear CFPS)^(1/number of years)]-1
      base= Math.round(lastYear/firstYear * 100.0) / 100.0;
      forecast= Double.valueOf(years);
      exponent= Math.round(1.0/forecast * 100.0) / 100.0;
      growth= Math.pow(base,exponent)-1;
      
      //rounding off the GR
      growthRounded=Math.round(growth * 100.0) / 100.0;
     
      //Converting to a percentage value and a string format
      double data = growthRounded*100;
      int value = (int)data; 
      growthRate = String.valueOf(value)+"%";
      
      //sending the Historic GR
      return growthRate;
    }
    
   private static String calculateInsintricValue(double lastYear,double discountRate,double EFCFRate,double infiniteRate){
        String result;
        double EFCFRate_decimal,EFCFRate_decimalAsWhole;
        double FCF_1,FCF_2,FCF_3,FCF_4,FCF_5;
        double EFCFRate_power;
       
        //converting inputs into usable data
        EFCFRate_decimal=EFCFRate/100.0;
        EFCFRate_decimalAsWhole= EFCFRate_decimal+1.0;
        
        
        //calculating future cashflows
        //1st future year
        FCF_1= lastYear*EFCFRate_decimalAsWhole;
        
        //2nd future year
        FCF_2= lastYear*Math.pow(EFCFRate_decimalAsWhole,2);
        
        //3rd future year
        FCF_3= lastYear*Math.pow(EFCFRate_decimalAsWhole,3);
        
        //4th future year
        FCF_4= lastYear*Math.pow(EFCFRate_decimalAsWhole,4);
        
        //5th future year
        FCF_5= lastYear*Math.pow(EFCFRate_decimalAsWhole,5);
       
        //calculating future discount rates
        double DFCF_rounded,DFCF,DR_1,DR_2,DR_3,DR_4,DR_5;
        double DR_asDecimal,DR_decimalAsWhole=1.0;
    
        //coverting DR input to usable formats
        DR_asDecimal=discountRate/100.0;
        DR_decimalAsWhole=DR_decimalAsWhole+DR_asDecimal ;
        
        //DCF rates for the next 5 years
        DR_1=DR_decimalAsWhole;
        DR_2=Math.pow(DR_decimalAsWhole,2);
        DR_3=Math.pow(DR_decimalAsWhole,3);
        DR_4=Math.pow(DR_decimalAsWhole,4);
        DR_5=Math.pow(DR_decimalAsWhole,5);
      
        //Discounted Future Cashflow
        DFCF = (FCF_1/DR_1) + (FCF_2/DR_2) + (FCF_3/DR_3) + (FCF_4/DR_4) + (FCF_5/DR_5);
        DFCF_rounded=Math.round(DFCF * 100.0) / 100.0;
        
        //calculating Terminal Value
        double infiniteRate_asDecimal,infiniteRate_asWholeDecimal=1.0;
        
        infiniteRate_asDecimal=infiniteRate/100.0;
        infiniteRate_asWholeDecimal=infiniteRate_asWholeDecimal+infiniteRate_asDecimal;
        
        //applying the formula
        double terminalValue,terminalValue_rounded;
        
        terminalValue = (FCF_5 * infiniteRate_asWholeDecimal) / (DR_asDecimal-infiniteRate_asDecimal );
        terminalValue_rounded=Math.round(terminalValue * 100.0) / 100.0;
        
        //calculating intrinsic value
        double intrinsicValue,intrinsicValue_rounded;
        double totalDiscount,totalFlow;
        
        totalDiscount= Math.pow(DR_decimalAsWhole,5);
        totalFlow=terminalValue_rounded+DFCF_rounded;
        intrinsicValue=totalFlow/totalDiscount;
        intrinsicValue_rounded=Math.round(intrinsicValue * 100.0) / 100.0;
                
        //displaying result
        result=intrinsicValue_rounded+"/=";
        return result;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EFCFRate;
    private javax.swing.JTextField GR_display;
    private javax.swing.JButton HGR_calculate;
    private javax.swing.JButton IV_calculate;
    private javax.swing.JTextField IV_display;
    private javax.swing.JButton clear;
    private javax.swing.JTextField discountRate;
    private javax.swing.JTextField firstYear;
    private javax.swing.JTextField infiniteRate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTextField lastYear;
    private javax.swing.JTextField years;
    // End of variables declaration//GEN-END:variables
}
